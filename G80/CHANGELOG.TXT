
v0.01a
        -Setup Serial Communication
        -Added code to Get Keys and Echo back over serial
        -Added basic code for general flow
v0.04a
        -Added 40 Character Buffer
        -Added code to convert lowercase to uppercase upon reciept of character.
        -Added code to give error upon buffer overflow.
        -Added code to add backspace support at terminal and in buffer.
        -Added code to refuse backspace over prompt symbol, and adjust buffer.
v0.05a
        -Added command recognition
        -Added test commands
v0.06a
        -Added Routine for conversion and printing of binary to ASCII
         representation of Hexidecimal Number.
        -Added Routine to convert ASCII representation of Hexidecimal Number
         to binary.
        -Added Dump Command and Routines to display memory locations, data, and
         ASCII data.
        -Added Help Command and Routine.
        -Added Clear Screen Routine, and Command to clear the Screen.
        -Added Restart Command and Routine
v0.15a
        -Added MODMEM Command and Routines
        -Added IN Command and Routines
        -Added OUT Command and Routines
        -Added CALL Command and Routines
V0.25b
        -Added Andrew Lynch`s utility for Intel Hex Format Transfer
                -This is a modified version, rewritten by Bernd Ulmann of
                 http://www.vaxman.de
                -This was modified again to conform with the G80-S system
        -Added RAM Clearing capability to the user.
        -Added HEXLOAD and RAMCLR commands to the system and help menu.
        -Tested HEXLOAD and RAMCLR Routines
        -Tested SYS-Call routine SYS_CALL_PRN_STRG
        -Found Bug in DUMPER utility, it missed sending a character in the ASCII
         value line in the top of the memory space.  Has not repeated....
        -Found bug in HEXLOAD routine, when exiting it spits out two PRINT_PROMPT
         calls, resulting in two Prompts being printed to the screen.
        -Started Jump-Table for SYS-Calls.  Currently PRN_STRG & PRN_CHAR
v0.2xx
        -Broke apart code for RXA_RDY and GET_KEY routines, adding in RXA_TST
         Routine and RXSW Memory Location for Received Data Switch. -UNTESTED.
        -Rewrote MAIN_LOOP to reflect the to separate functions: First calls
         RXA_RDY, then calls RXA_TST.  If data is available it continues to
         GET_KEY, else returns to MAIN_LOOP.

v0.45t
	-Integration of TinyBASIC into the Monitor
	-Added routine for returning to the Monitor from TinyBASIC
	-Integration of TinyBASIC Routines for IN/OUT and PEEK/POKE.
	-Cleaned up some code.

V0.50b
        -Updated TinyBASIC to version 2.5g.
        -Added Ports information to Help Menu
        -Cleaned up Code
   BUGS REPORTED:
        -TinyBASIC issue with OUTC -> Should be OUT(Serialport),A
        -TinyBASIC Issue with CTRL-O
         CTRL-O Should turn off the Output, Not Working.  Fix by initializing
         the OCSW Switch.  INIT: LD (OCSW),A ;SET Initial VALUE FOR SWITCH
         Caused by Random Initialization of SRAM.
        -Issue in TinyBASIC dealing with commas.
         Issue PRINT A,B,C - WORKS
                PRINT A,"ONE",B,"TWO",C,"THREE" - Doesnt work.
        -TinyBASIC INPUT "PRINT SOMETHING" A
         Doesnt store value of A.
        -HEXLOAD Offset causes problems when loading
        -MODMEM "Accidental 'RETURN'" causes 0FEh in that memory location
v0.51b
        -Fixed TinyBASIC Bug with OUTC
        -Fixed TinyBASIC CTRL-O Bug
        -Fixed HEXLOAD Offset Bug
	-Fixed MODMEM 'Enter' Bug
        -TinyBASIC Bug Concerning PRINT and Commas appears to be an issue
	 with how many types of items are given and the order in which they
	 are presented.  A variable and a string may be given, but only if
	 the variable is given before the string.  A variable, string, then
	 another variable may be given.  But if a third variable or second
	 string is given an error of 'WHAT?' is returned.  This appears to
	 be a non-issue, as there are ways to code around this problem.
	 Although original programs may not run, and need modification.
     KNOWN BUGS:
	-TinyBASIC Input Bug appears to be design flaw.  It does not allow
	 for both a "string" and a variable.  THIS IS A KNOWN PROBLEM THAT
	 IS UNRESOLVED.
v0.51b Patch 1
        -Bug found at QT2 where the PRINT command is not properly functioning.
         Getting data on bug at this time. Fix appears to use 2x INC HL instead
         the 3x that is used in the original TinyBASIC.  This is due to use of
         the JR (relative jump) instruction.  This is fix, and confirmed.
v0.52b / TB Patch 3
        -ROM Code rewritten, modules implemented, and can be easily replaced.
        -DOS implemented for calls 1 through 14, of 24 possible calls.
        -FORTH code added, and Mike Veits code patched into system.
        -Redundant routines scrapped, calls to existing routines made.
        -HEX Loader modified.
        -GET_KEY and PRINT_CHAR routines modular.
        -ROM given a central loop, making calls to required routines.
        -Unused code removed, trimmed the fat.
        -Code updated to support conditional assembly, adding support for future
         add-ons and new CPU boards, as well as 'pick & mix' features.
        -Adjusted TinyBASIC POKE routine to reflect ability to Poke HEX values
         into memory.
        -Added CALL instruction, allowing use of machine code within TinyBASIC.
         All code needs a return instruction to return from the machine code.
         All registers are restored to previous values before calling CALL.
         Any values generated from machine code must be stored in a memory
          location, and then accessed by PEEK/POKE.







